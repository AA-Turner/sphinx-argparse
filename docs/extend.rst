Extending results of `argparse` directives
==========================================

You can add extra content or even replace some parts of the documentation generated by the `argparse` directive. For example, any content you put inside directives (you must follow ReStructuredText identation rules) will be inserted just before the argument and option list::

   .. argparse::
       :module: my.module
       :func: my_func_that_return_parser
       :prog: fancytool

       My content here that will be inserted right before the argument list.

       Also any valid markup...
       *************************

       ... may `be` *applied* here

       including::

            any directives you usually use.


Also, there is an option to insert custom content into a specific argument/option/subcommand description. Just create name:definition pair, where the name is an argument/option/subcommand name and the definition is any reStructured markup::

   .. argparse::
       :module: my.module
       :func: my_func_that_return_parser
       :prog: fancytool

       My content here that will be inserted as extra right before argument list.

       foo
            This text will go right after the "foo" positional argument help.

       install
            This text will go right after the "install" subcommand help and before its arguments.

            --upgrade
                This text will go after the upgrade option of the install subcommand. Nesting is unlimited.


You can also add classifiers, which will change how these definitions are incorporated::

   .. argparse::
       :module: my.module
       :func: my_func_that_return_parser
       :prog: fancytool

       My content that will be inserted right before the argument list.

       foo : @before
            This text will go before the "foo" positional argument help.

       install : @replace
            This text will replace the "install" subcommand help/description.

            --upgrade : @after
                The after directive is the default, so you needn't specify it.


@before
    Insert content before parsed help/description message of argument/option/subcommand.

@after
    Insert content after parsed help/description message of argument/option/subcommand. This is the default.

@replace
    Replace content of help/description message of argument/option/subcommand.
